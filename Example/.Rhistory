require(ggplot2)
require(scales)
colors <- c("#673F03", "#B50142","#AB08FF","#7B1DFF", "#5731FD","#5E8EFF", "#4755FF" ,"#6FC4FE", "#86E9FE", "#96FFF7", "#B2FCE3", "#BBFFDB", "#D4FFDD", "#EFFDF0")
setwd("/Users/cslab/Desktop/final-project-kai-sam-and-vic/Example/")
initial_data <- read.table("munged_basicReplicationDataSEED10.dat", h=T)
initial_data <-cbind(initial_data, hist_0_prop=initial_data$hist_0/initial_data$count, Treatment=as.factor(initial_data$treatment))
early <- subset(initial_data, update<20)
just_middle <- subset(initial_data, treatment==0.5)
zeroed <- initial_data
zeroed[is.na(zeroed)] <- 0
ggplot(data=early, aes(x=update, y=coop, group=Treatment, colour=Treatment)) + ylab("Mean Cooperation Value") + xlab("Updates") + stat_summary(aes(color=Treatment, fill=Treatment),fun.data="mean_cl_boot", geom=c("smooth"), se=TRUE) + theme(panel.background = element_rect(fill='white', colour='black')) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) +scale_colour_manual(values=colors) + scale_fill_manual(values=colors) +xlim(0,20)
update_1 <- subset(initial_data, update==1)
wilcox.test(subset(update_1, treatment==1.0)$coop, subset(update_1, treatment=0.5)$coop)
ggplot(data=early, aes(x=update, y=tasks_solved, group=Treatment, colour=Treatment)) + ylab("Mean Cooperation Value") + xlab("Updates") + stat_summary(aes(color=Treatment, fill=Treatment),fun.data="mean_cl_boot", geom=c("smooth"), se=TRUE) + theme(panel.background = element_rect(fill='white', colour='black')) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) +scale_colour_manual(values=colors) + scale_fill_manual(values=colors) +xlim(0,20)
update_1 <- subset(initial_data, update==1)
ggplot(data=early, aes(x=update, y=tasks_solved, group=Treatment, colour=Treatment)) + ylab("Mean Cooperation Value") + xlab("Updates") + stat_summary(aes(color=Treatment, fill=Treatment),fun.data="mean_cl_boot", geom=c("smooth"), se=TRUE) + theme(panel.background = element_rect(fill='white', colour='black')) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) +scale_colour_manual(values=colors) + scale_fill_manual(values=colors) +xlim(0,20)
ggplot(data=early, aes(x=update, y=tasks_solved)) + ylab("Mean Cooperation Value") + xlab("Updates") + stat_summary(aes(color=blues9, fill=blues9),fun.data="mean_cl_boot", geom=c("smooth"), se=TRUE) + theme(panel.background = element_rect(fill='white', colour='black')) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) +scale_colour_manual(values=colors) + scale_fill_manual(values=colors) +xlim(0,20)
rlang::last_error()
ggplot(data=early, aes(x=update, y=tasks_solved)) + ylab("Mean Cooperation Value") + xlab("Updates") + stat_summary(aes(color=tasks_solved, fill=tasks_solved),fun.data="mean_cl_boot", geom=c("smooth"), se=TRUE) + theme(panel.background = element_rect(fill='white', colour='black')) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) +scale_colour_manual(values=colors) + scale_fill_manual(values=colors) +xlim(0,20)
early <- subset(initial_data, update<1000)
just_middle <- subset(initial_data, treatment==0.5)
ggplot(data=early, aes(x=update, y=tasks_solved)) + ylab("Mean Cooperation Value") + xlab("Updates") + stat_summary(aes(color=tasks_solved, fill=tasks_solved),fun.data="mean_cl_boot", geom=c("smooth"), se=TRUE) + theme(panel.background = element_rect(fill='white', colour='black')) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) +scale_colour_manual(values=colors) + scale_fill_manual(values=colors) +xlim(0,20)
ggplot(data=early, aes(x=update, y=tasks_solved)) + ylab("Mean Cooperation Value") + xlab("Updates") + stat_summary(aes(color=tasks_solved, fill=tasks_solved),fun.data="mean_cl_boot", geom=c("smooth"), se=TRUE) + theme(panel.background = element_rect(fill='white', colour='black')) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + guides(fill=FALSE) +scale_colour_manual(values=colors) + scale_fill_manual(values=colors) +xlim(0,20)
